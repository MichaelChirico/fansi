% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tohtml.R
\name{esc_to_html}
\alias{esc_to_html}
\title{Convert ANSI CSI SGR Escape Sequence to HTML Equivalents}
\usage{
esc_to_html(x, warn = getOption("fansi.warn"),
  term.cap = getOption("fansi.term.cap"))
}
\arguments{
\item{x}{character vector}

\item{warn}{TRUE (default) or FALSE, whether to warn whether potentially
problematic escape sequences are encountered.  These could cause the
assumptions \code{fansi} is makes about how strings are rendered on your display
to be incorrect, for example by moving the cursor (see \link{fansi}).}

\item{term.cap}{character a vector of the capabilities of the terminal, can
be any combination "bright" (SGR codes 90-97, 100-107), "256" (SGR codes
starting with "38;5" or "48;5"), and "truecolor" (SGR codes starting with
"38;2" or "48;2"). Defaults to \code{c("bright", "256")}.  Changing this
parameter changes how \code{fansi} interprets escape sequences, so you should
ensure that it matches your terminal capabilities.}
}
\value{
a character vector with all escape sequences removed and any basic
ANSI CSI SGR escape sequences applied via SPAN html objects with specified
css styles.
}
\description{
Only the colors, background-colors, and basic styles (CSI SGR codes 1-9) are
translated.  Others are ignored.
}
\examples{
esc_to_html("hello\\033[31;42;1mworld\\033[m")
}
\seealso{
\link{fansi} for details on how control characters and sequences are
interpreted, and \link{term_cap_test} to ensure \code{fansi} is correctly
interpreting your terminal capabilities, particularly if you are getting
unexpected results.
}
