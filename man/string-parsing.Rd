% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ansi.R
\name{string-parsing}
\alias{string-parsing}
\title{\code{fansi} String Parsing and Interpretation}
\description{
\code{fansi} String Parsing and Interpretation
}
\section{Control Characters and Sequences}{


Control characters and sequences are non-printing inline characters that can
be used to modify terminal display and behavior, for example by changing text
color or cursor position.  There are three types of control characters and
sequences that \code{fansi} treats specially:
\itemize{
\item "C0" control characters, such as tabs and carriage returns.
\item Sequences starting in "ESC[", also known as ANSI CSI sequences.
\item Sequences starting in "ESC" and followed by something other than "[".
}

All of these are considered zero display width for purposes of string width
calculations.

Escape sequences starting with ESC are assumed to be two characters
long (including the ESC) unless they are of the CSI variety, in which case
their length is computed as per the ANSI CSI spec.  There are non-CSI escape
sequences that may be longer than two characters, but \code{fansi} will treat them
as if they were two characters wide.

In theory it is possible to encode ANSI CSI escape sequences with single byte
introducing character in the 0x40-0x5F range instead of the traditional
"ESC[".  Since this is rare and it conflicts with UTF-8 encoding, we do not
support it.
}

