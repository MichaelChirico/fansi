% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nchar.R
\name{nchar_esc}
\alias{nchar_esc}
\alias{nzchar_esc}
\title{ANSI Control Sequence Aware Version of nchar}
\usage{
nchar_esc(x, type = "chars", allowNA = FALSE, keepNA = NA,
  warn = getOption("fansi.warn"))

nzchar_esc(x, keepNA = NA, warn = getOption("fansi.warn"))
}
\arguments{
\item{x}{character vector, or a vector to be coerced to a character
    vector.  Giving a factor is an error.}

\item{type}{character string, one of "chars", or "width".  For byte counts
use \link[base:nchar]{base::nchar}.}

\item{allowNA}{logical: should \code{NA} be returned for invalid
    multibyte strings or \code{"bytes"}-encoded strings (rather than
    throwing an error)?}

\item{keepNA}{logical: should \code{NA} be returned where ever
  \code{x} is \code{\link{NA}}?  If false, \code{nchar()} returns
  \code{2}, as that is the number of printing characters used when
  strings are written to output, and \code{nzchar()} is \code{TRUE}.  The
  default for \code{nchar()}, \code{NA}, means to use \code{keepNA = TRUE}
  unless \code{type} is \code{"width"}.  Used to be (implicitly) hard
  coded to \code{FALSE} in \R versions \eqn{\le}{<=} 3.2.0.}
}
\description{
\code{nchar_esc} counts all non control character / sequence characters.
\code{nzchar_esc} returns TRUE for each input vector element that has non control
chacater / sequence characters.
}
\details{
These functions are faster than the semantically equivalent
\code{nchar(strip_esc(x, what='all')). If you wish to control which control characters and sequences are stripped you will need to use}nchar(strip_esc(x, what=...))`.  In particular, note that newlines are
treated as control characters and not counted.

These functions will warn if either malformed or non-CSI escape sequences are
encountered, as these may be incorrectly interpreted.

Any non-ASCII non-UTF8 string will be converted to UTF8 prior to computing
character or width counts.
}
\examples{
nchar_esc("\\033[31mone\\a\\r")
## with some wide characters
cn.string <-  sprintf("\\033[31m\%s\\a\\r", "\\u4E00\\u4E01\\u4E03")
nchar_esc(cn.string)
nchar_esc(cn.string, type='width')

## All of the following are control sequences
nzchar_esc("\\n\\033[42;31m\\033P\\a")
## If we want to count newlines, this is a slower option

}
\seealso{
\link{strip_esc}
}
